{
  "variables": [],
  "info": {
    "name": "Space to Imgur",
    "_postman_id": "db84bc44-e279-688f-6c21-820e3941040c",
    "description": "Retrieve the Astronomy Pic of the Day from NASA, and post the image anonymously or via OAUTH 2.0 to Imgur.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "a3bed22b-d5bf-5364-c0de-04ab71f4d67b",
      "name": "Astronomy Picture of the Day",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// for commonly used tests, click on the snippets to the right for starter code. Any modifications or custom scripts can be written in Javascript.",
              "",
              "// this first test ensures a successful 200 response status code",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// this second block of code will parse the response object and set environment variables",
              "if (responseCode.code === 200) {",
              "    ",
              "    try {",
              "        // parse the JSON response object to access title, explanation, and hdurl",
              "        var result = JSON.parse(responseBody);",
              "        var title = result.title;",
              "        var explanation = result.explanation;",
              "        var url = result.hdurl;",
              "    }",
              "    ",
              "    catch(e) {",
              "        console.log(e);",
              "    }",
              "    ",
              "    // the setEnvironmentVariable() method accepts a variable name and value as parameters. Use this method to establish environment variables that can be accessed in subsequent requests when the entire collection is run along with the corresponding environment template.",
              "    postman.setEnvironmentVariable(\"spaceTitle\", title);",
              "    postman.setEnvironmentVariable(\"spaceExplanation\", explanation);",
              "    postman.setEnvironmentVariable(\"spaceUrl\", url);",
              "",
              "}",
              "",
              "// the setNextRequest() method accepts a request name within the same collection as a parameter. Use this method to establish a workflow sequence and designate which request in the same collection to run next, instead of the next request in the list.",
              "postman.setNextRequest(\"Upload image to Imgur via OAUTH\");",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&hd=True",
        "method": "GET",
        "header": [],
        "body": {},
        "description": "GET request for Astronomy Picture of the Day from NASA\n===\n\nSending this request will return a picture posted by NASA. Documentation for the NASA API is available [here](https://api.nasa.gov/api.html#apod).\n\nPostman tests are a good way to ensure that you're getting the correct, anticipated responses from your requests. You can include custom scripts to execute additional logic too.\n\n- Under the Postman **Tests** tab, the first test ensures a successful 200 response status code.  \n- The second test will parse the JSON object response, and set environment variables (title, URL, etc.) that can be accessed in subsequent requests when the entire collection is run."
      },
      "response": []
    },
    {
      "_postman_id": "64e36a2b-cea3-7d41-439b-0e9a8988f0f8",
      "name": "Upload image to Imgur ANON",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.imgur.com/3/upload",
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Client-ID 9cbdb08dc9da19f",
            "description": ""
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "image",
              "value": "{{spaceUrl}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "title",
              "value": "{{spaceTitle}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "description",
              "value": "{{spaceExplanation}}",
              "type": "text",
              "enabled": true
            }
          ]
        },
        "description": "Upload an image anonymously to Imgur\n===\n\nUsage of the Imgur API requires registration of your application. Documentation for the Imgur API is available [here](https://api.imgur.com/endpoints). If you don't already have one, create an Imgur account, and register an application.\n\nWe will be using the [image upload endpoint](https://api.imgur.com/endpoints/image#image-upload) from Imgur.\n\n- In the Postman request builder, select the `POST` method from the dropdown, and enter the `https://api.imgur.com/3/upload` endpoint in the URL bar.\n- Under the Postman **Headers* tab, enter an `Authorization` key with the value of `Client-ID <your-client-id-from-imgur>`.\n- Under the Postman **Body** tab, enter the body parameters that you would like to include in your image upload. For the `image` key, we will use a URL for an image as the value. We can access the environment variable that we created in the previous request within this collection, by using double curly brackets surrounding the environment variable name (e.g. `{{spaceUrl}}`)."
      },
      "response": []
    },
    {
      "_postman_id": "7af771d1-4806-6cbe-aca9-468ae581d03d",
      "name": "Upload image to Imgur via OAuth 2.0",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// it might be useful to hang on to the photo's id on Imgur. We can do that by parsing the response object, and setting an environment variable to access in subsequent requests. ",
              "",
              "if (responseCode.code === 200) {",
              "    ",
              "    try {",
              "        var result = JSON.parse(responseBody);",
              "        var id = result.data.id;",
              "    }",
              "    ",
              "    catch(e) {",
              "        console.log(e);",
              "    }",
              "    ",
              "    postman.setEnvironmentVariable(\"imgurId\", id);",
              "    ",
              "}"
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.imgur.com/3/upload",
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "description": ""
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "image",
              "value": "{{spaceUrl}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "title",
              "value": "{{spaceTitle}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "description",
              "value": "{{spaceExplanation}} ....... beep boop .... Here's the Astronomy picture of the day from NASA, posted using Postman: https://documenter.getpostman.com/view/1559979/space-to-imgur/6YsWHS2",
              "type": "text",
              "enabled": true
            }
          ]
        },
        "description": "Upload an image under your Imgur account via OAuth 2.0\n===\n\nUsage of the Imgur API requires registration of your application. Documentation for the Imgur API is available [here](https://api.imgur.com/endpoints). If you don't already have one, create an Imgur account, and register an application.\n\nThis is essentially the same request as the previous one to upload an image anonymously to Imgur, except we will authorize our request using an Oauth 2.0 access token.\n\nUnder the Postman **Authorization** tab, select `OAuth 2.0` from the dropdown. Click the `Get New Access Token` button to request your token.\n- Token Name: <any-token-name-that-you-want>\n- Auth URL: `https://api.imgur.com/oauth2/authorize`\n- Access Token URL: `https://api.imgur.com/oauth2/token`\n- Client ID: <your-app's-client-ID-from-Imgur>\n- Client Secret: <generate-new-secret-for-your-app-from-Imgur>\n- Grant Type: `Authorization Code`\n\nStill under the Postman **Authorization** tab, select your new token's name and verify `Add token to` is set to `Header`. Copy the `access_token` value and save it as a new environment variable (e.g. `accessToken`) by clicking the eyeball in the upper right corner of the Postman app.\n\nNote: if you share your Postman environment template with another person, they will have access to your `access_token` unless create a shareable environment template stripped of the `access_token` value.\n\nUnder the Postman **Headers** tab, replace the `Authorization` value with `Bearer {{<your-environment-variable-name>}}`.\n\nLastly, if I want to do some other things with this uploaded image, it might be useful for me to hold on to the photo's id on Imgur. Do you remember how to do that? Check out the comments under the Postman **Tests** tab for a hint."
      },
      "response": []
    },
    {
      "_postman_id": "cfa12e22-05e6-3400-e254-e2f5014b561c",
      "name": "Share image with Imgur community",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.imgur.com/3/gallery/image/{{imgurId}}",
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "description": ""
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "title",
              "value": "{{spaceTitle}}",
              "type": "text",
              "enabled": true
            }
          ]
        },
        "description": "Share an image with the Imgur community via OAuth 2.0.\n==="
      },
      "response": []
    }
  ]
}