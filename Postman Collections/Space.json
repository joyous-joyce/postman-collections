{
  "variables": [],
  "info": {
    "name": "Space to Imgur",
    "_postman_id": "db84bc44-e279-688f-6c21-820e3941040c",
    "description": "Retrieve the Astronomy Pic of the Day from NASA, and post the image anonymously or via OAUTH 2.0 to Imgur.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "a3bed22b-d5bf-5364-c0de-04ab71f4d67b",
      "name": "Astronomy Picture of the Day",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "// tests are a good way to ensure you're getting the correct, anticipated responses from your requests.  Click on the snippets to the right for starter code for commonly used tests. Any modifications or custom scripts can be written in Javascript.",
              "",
              "// this first test ensures a successful 200 response status code",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// this second block of code will parse the response object and set environment variables",
              "if (responseCode.code === 200) {",
              "    ",
              "    try {",
              "        // parse the JSON response object to access title, explanation, and hdurl",
              "        var result = JSON.parse(responseBody);",
              "        var title = result.title;",
              "        var explanation = result.explanation;",
              "        var url = result.hdurl;",
              "    }",
              "    ",
              "    catch(e) {",
              "        console.log(e);",
              "    }",
              "    ",
              "    // the setEnvironmentVariable() method accepts a variable name and value as parameters. Use this method to establish environment variables that can be accessed in subsequent requests when the entire collection is run along with the corresponding environment template.",
              "    postman.setEnvironmentVariable(\"spaceTitle\", title);",
              "    postman.setEnvironmentVariable(\"spaceExplanation\", explanation);",
              "    postman.setEnvironmentVariable(\"spaceUrl\", url);",
              "",
              "}",
              "",
              "// the setNextRequest() method accepts a request name within the same collection as a parameter. Use this method to establish a workflow sequence and designate which request in the same collection to run next, instead of the next request in the list.",
              "postman.setNextRequest(\"Upload image to Imgur via OAUTH\");",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&hd=True",
        "method": "GET",
        "header": [],
        "body": {},
        "description": "GET request for Astronomy Picture of the Day from NASA\n===\n\nSending this request will return a picture posted by NASA. Documentation for the NASA API is available [here](https://api.nasa.gov/api.html#apod).\n\nUnder the Postman **Tests** tab, the first test ensures a successful 200 response status code.  The second test will parse the JSON object response, and set environment variables (title, URL, etc.) that can be accessed in subsequent requests when the entire collection is run."
      },
      "response": []
    },
    {
      "_postman_id": "64e36a2b-cea3-7d41-439b-0e9a8988f0f8",
      "name": "Upload image to Imgur ANON",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.imgur.com/3/upload",
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Client-ID 9cbdb08dc9da19f",
            "description": ""
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "image",
              "value": "{{spaceUrl}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "title",
              "value": "{{spaceTitle}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "description",
              "value": "{{spaceExplanation}}",
              "type": "text",
              "enabled": true
            }
          ]
        },
        "description": "Upload an image anonymously to Imgur\n===\n\nUsage of the Imgur API requires registration of your application. Documentation for the Imgur API is available [here](https://api.imgur.com/endpoints).\n\nWe will be using the [image upload endpoint](https://api.imgur.com/endpoints/image#image-upload) from Imgur.\n\n- In the request builder, select the `POST` method from the dropdown, and enter the `https://api.imgur.com/3/upload` endpoint in the URL bar.\n- Under the **Headers* tab, enter an `Authorization` key with the value of `Client-ID <your-client-id-from-imgur>`.\n- Under the **Body** tab, enter the body parameters that you would like to include in your image upload. For the `image` key, we will use a URL for an image as the value. We can access the environment variable that we created in the previous request within this collection, by using double curly brackets surrounding the environment variable name."
      },
      "response": []
    },
    {
      "_postman_id": "7af771d1-4806-6cbe-aca9-468ae581d03d",
      "name": "Upload image to Imgur via OAUTH",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "if (responseCode.code === 200) {",
              "    ",
              "    try {",
              "        var result = JSON.parse(responseBody);",
              "        var id = result.data.id;",
              "    }",
              "    ",
              "    catch(e) {",
              "        console.log(e);",
              "    }",
              "    ",
              "    postman.setEnvironmentVariable(\"imgurId\", id);",
              "    ",
              "}"
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.imgur.com/3/upload",
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "description": ""
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "image",
              "value": "{{spaceUrl}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "title",
              "value": "{{spaceTitle}}",
              "type": "text",
              "enabled": true
            },
            {
              "key": "description",
              "value": "{{spaceExplanation}} ....... beep boop .... Here's the Astronomy picture of the day from NASA, posted using Postman: https://documenter.getpostman.com/view/1559979/space-to-imgur/6YsWHS2",
              "type": "text",
              "enabled": true
            }
          ]
        },
        "description": "Upload an image to Imgur using your Imgur account credentials via Oauth 2.0."
      },
      "response": []
    },
    {
      "_postman_id": "cfa12e22-05e6-3400-e254-e2f5014b561c",
      "name": "Share image with Imgur community",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "https://api.imgur.com/3/gallery/image/{{imgurId}}",
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "description": ""
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "title",
              "value": "{{spaceTitle}}",
              "type": "text",
              "enabled": true
            }
          ]
        },
        "description": "Share an image (already uploaded to Imgur) with the Imgur community."
      },
      "response": []
    }
  ]
}